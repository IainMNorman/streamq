@model StreamQ.ViewModels.QuestionsVM
@using Microsoft.AspNet.Identity;
@{
    ViewBag.Title = "Questions";
}
<div class="row">
    <div class="col-sm-12">
        <h1 class="page-header">
            Questions for Ed
        </h1>

        @if (User.Identity.IsAuthenticated)
        {
            <p>Ask a question below. Please keep question to the topic of the current stream. You have a limited number of question and votes to use, use them wisley.</p>
            <p>Don't waste your questions asking things that are already here. Please have a look down to see if it's been asked already and up-vote it instead!</p>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <form method="post" action="home/askquestion">
                <div class="form-group form-group-lg">
                    <div class="col-sm-12 input-group">
                        @Html.EditorFor(model => model.QuestionText, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your question..." } })
                        <span class="input-group-btn">
                            <input type="submit" class="btn btn-primary btn-lg" value="Ask Question" />
                        </span>
                    </div>
                </div>
            </form>

            @Html.ValidationMessageFor(model => model.QuestionText, "", new { @class = "text-danger" })


        }
        else
        {
            <p>Please <a href="/account/login/">login</a> to ask a question or vote.</p>
        }

        @foreach (var q in Model.Questions)
        {
            <div class="well well-sm">
                <div class="row sq-question" data-questionid="@q.Id" data-votevalue="@q.CurrentUserVoteValue">
                    <div class="col-sm-2 col-md-1 text-center">
                        <div>
                            <i class="voteup fa fa-fw fa-chevron-circle-up
                                @(q.CurrentUserVoteValue == 1 ? "voted" : "")"></i>
                        </div>
                        <div class="totalvotes">@(q.TotalVotes)</div>
                        <div>
                            <i class="votedown fa fa-fw fa-chevron-circle-down
                                @(q.CurrentUserVoteValue == -1 ? "voted" : "")"></i>
                        </div>
                    </div>
                    <div class="col-sm-10 col-md-11">@q.Text @q.CurrentUserVoteValue</div>
                </div>
            </div>
        }
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>

        $(function () {

            $(".voteup").click(function () {
                var q = $(this).parents(".sq-question");
                var qid = q.data("questionid");
                var voteValue = Number(q.data("votevalue"));
                var totalVotes = Number(q.find(".totalvotes").html());
                if (voteValue == 0) {
                    //tell api to upvote.
                    vote(qid, 1);
                    q.data("votevalue", 1);
                    q.find(".voteup").addClass("voted");
                    q.find(".totalvotes").html(totalVotes + 1);

                }
                else if (voteValue == -1) {
                    //tell api to upvote.
                    vote(qid, 1);
                    q.data("votevalue", 1);
                    q.find(".voteup").addClass("voted");
                    q.find(".votedown").removeClass("voted");
                    q.find(".totalvotes").html(totalVotes + 2);
                }
                else if (voteValue == 1) {
                    // tell api to remove vote.
                    vote(qid, 0);
                    q.data("votevalue", 0)
                    q.find(".voteup").removeClass("voted");
                    q.find(".totalvotes").html(totalVotes - 1);
                }
            });

            $(".votedown").click(function () {
                var q = $(this).parents(".sq-question");
                var qid = q.data("questionid");
                var voteValue = Number(q.data("votevalue"));
                var totalVotes = Number(q.find(".totalvotes").html());
                if (voteValue == 0) {
                    //tell api to votedown.
                    vote(qid, 2);
                    q.data("votevalue", -1);
                    q.find(".votedown").addClass("voted");
                    q.find(".totalvotes").html(totalVotes - 1);
                }
                else if (voteValue == -1) {
                    //tell api to remove vote.
                    vote(qid, 0);
                    q.data("votevalue", 0);
                    q.find(".votedown").removeClass("voted");
                    q.find(".totalvotes").html(totalVotes + 1);
                }
                else if (voteValue == 1) {
                    // tell api to down vote.
                    vote(qid, 2);
                    q.data("votevalue", -1)
                    q.find(".voteup").removeClass("voted");
                    q.find(".votedown").addClass("voted");
                    q.find(".totalvotes").html(totalVotes - 2);
                }
            });

        });

        function vote(questionId, voteType) {
            $.ajax("/api/v1/questions/" + questionId + "/" + voteType);
        }

    </script>
}
