@model StreamQ.ViewModels.QuestionsVM
@using Microsoft.AspNet.Identity;
@{
    ViewBag.Title = "Questions";

    var qString = "questions";
    if (Model.QuestionQuota == 1)
    {
        qString = "question";
    }

    var vString = "votes";
    if (Model.VoteQuota == 1)
    {
        vString = "vote";
    }
}
<div class="row">
    <div class="col-sm-12">

        <h1 class="page-header">
            Questions
            @if (User.Identity.IsAuthenticated)
            {
                <span class="pull-right">
                    <small>
                        You have
                        @Model.QuestionQuota @qString and
                        @Model.VoteQuota @vString left.
                    </small>
                </span>
            }
        </h1>


        @if (User.Identity.IsAuthenticated)
        {
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <form method="post">
                <div class="form-group form-group-lg">
                    <div class="col-sm-12 input-group">
                        @Html.EditorFor(model => model.QuestionText, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your question..." } })
                        <span class="input-group-btn">
                            <input type="submit" class="btn btn-primary btn-lg" value="Ask Question" />
                        </span>
                    </div>

                </div>
            </form>

            @Html.ValidationMessageFor(model => model.QuestionText, "", new { @class = "text-danger" })


        }
        else
        {
            <p>Please <a href="/account/login/">login</a> to ask a question or vote.</p>
        }


        @foreach (var q in Model.Questions)
        {
            <div class="well well-sm">
                <div class="row sq-question">

                    <div class="col-sm-2 col-md-1"><span class="label label-primary">@(q.UpVotes - q.DownVotes) @( (q.UpVotes - q.DownVotes) == 1 ? "vote" : "votes")</span></div>
                    <div class="col-sm-8 col-md-9">@q.Text </div>
                    <div class="col-sm-2 text-right">
                        @if (Model.VoteQuota > 0 && q.OwnerId != User.Identity.GetUserId())
                        {
                            <a href="/home/voteup/@q.Id" class="btn btn-success" title="Vote Up"><i class="fa fa-thumbs-up"></i></a>
                            <a href="/home/votedown/@q.Id" class="btn btn-warning" title="Vote Down"><i class="fa fa-thumbs-down"></i></a>
                        }
                        else
                        {
                            if (q.OwnerId == User.Identity.GetUserId())
                            {
                                <small>Your question</small>
                            }
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>






@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
